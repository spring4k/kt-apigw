plugins {
	id 'org.springframework.boot' version '2.5.9'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'maven-publish'
	id 'nu.studer.credentials' version '3.0'
}

group = 'com.ktds.act'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.projectlombok:lombok'
	// compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// https://mvnrepository.com/artifact/com.github.ulisesbocchio/jasypt-spring-boot-starter
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'
	// // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	// testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
	// // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	// testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
	// // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
	// testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.2'
  	// implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.23'
  	// runtimeOnly 'org.postgresql:postgresql'
  	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
	implementation 'io.github.resilience4j:resilience4j-micrometer'

	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	implementation 'org.modelmapper:modelmapper:2.3.8'

	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'com.auth0:java-jwt:3.18.2'

	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/com.giffing.bucket4j.spring.boot.starter/bucket4j-spring-boot-starter
    // implementation 'com.giffing.bucket4j.spring.boot.starter:bucket4j-spring-boot-starter:0.5.2'
	// https://mvnrepository.com/artifact/com.github.vladimir-bukhtoyarov/bucket4j-core
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.5.0'

	// https://mvnrepository.com/artifact/com.github.vladimir-bukhtoyarov/bucket4j-jcache
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-jcache:7.0.0'


	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.6'


	implementation group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.9.4'
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

	//soap lib
	// https://mvnrepository.com/artifact/javax.xml.soap/javax.xml.soap-api
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'

	// https://mvnrepository.com/artifact/com.sun.xml.messaging.saaj/saaj-impl
	implementation 'com.sun.xml.messaging.saaj:saaj-impl:1.5.0'

	//json lib
	// https://mvnrepository.com/artifact/net.sf.json-lib/json-lib
	implementation 'net.sf.json-lib:json-lib:2.4:jdk15'
    // https://mvnrepository.com/artifact/org.conscrypt/conscrypt-openjdk
    implementation group: 'org.conscrypt', name: 'conscrypt-openjdk', version: '2.5.2', ext: 'pom'
    implementation group: 'org.apache.commons', name: 'commons-pool2', version: '2.4.3'

    // base64 lib : KT JWT Token 사용
	implementation 'commons-codec:commons-codec:1.15'
	// jwt lib : KT JWT Token 사용
	implementation 'com.nimbusds:nimbus-jose-jwt:9.23'

	// implementation fileTree(dir: 'deployment/cusLibs', include: ['*.jar'])

	// implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// https://mvnrepository.com/artifact/org.redisson/redisson-spring-boot-starter
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.0'
    // OpenSSL support
    implementation group: 'io.netty', name: 'netty-tcnative', version: '2.0.54.Final'

}

task copyJarToDeploy(type: Copy) {
    def jarFile = file("${buildDir}/libs/${rootProject.name}-${version}.jar")
    from jarFile
    into "deployment/jar/"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = rootProject.name
            version = version

            artifact("build/libs/$rootProject.name-$version"+"-plain.jar") {
                extension 'jar'
            }
        }
    }
    repositories {
		def nexus_password = credentials.forKey('nexus_password')
        maven {
            name 'nexus'
            url nexus_repo
            allowInsecureProtocol true
            credentials {
                username nexus_username
                password nexus_password
            }
        }
    }
}
